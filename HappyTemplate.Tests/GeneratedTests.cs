
/**************************************************************
	This file was generated by the OmniUnitTestGenerator 
	project.  Don't bother modifying it.  Instead, modify the
	OmniTests.hts file in the HappyTemplate.TestsGenerator  project.	
 **************************************************************/
 
using System;
using HappyTemplate.Runtime;
using NUnit.Framework;


namespace HappyTemplate.Tests
{
	[TestFixture]
	public class ExpresionTexts : TestFixtureBase
	{
		
		[Test]		
		
		public void Test_1()
		{
			HappyRuntimeContext rc = CompileExpression("1");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("1", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_2()
		{
			HappyRuntimeContext rc = CompileExpression("2");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("2", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_3()
		{
			HappyRuntimeContext rc = CompileExpression("3");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("3", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_4()
		{
			HappyRuntimeContext rc = CompileExpression("4");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("4", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_5()
		{
			HappyRuntimeContext rc = CompileExpression("5");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("5", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_6()
		{
			HappyRuntimeContext rc = CompileExpression("6");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("6", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_7()
		{
			HappyRuntimeContext rc = CompileExpression("7");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("7", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_8()
		{
			HappyRuntimeContext rc = CompileExpression("8");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("8", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_9()
		{
			HappyRuntimeContext rc = CompileExpression("9");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("9", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_10()
		{
			HappyRuntimeContext rc = CompileExpression("-65535");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("-65535", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_11()
		{
			HappyRuntimeContext rc = CompileExpression("65535");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("65535", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_12()
		{
			HappyRuntimeContext rc = CompileExpression("1 + 1");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("2", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_13()
		{
			HappyRuntimeContext rc = CompileExpression("2 + 2");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("4", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_14()
		{
			HappyRuntimeContext rc = CompileExpression("3 + 3");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("6", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_15()
		{
			HappyRuntimeContext rc = CompileExpression("10 + 10");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("20", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		
		public void Test_16()
		{
			HappyRuntimeContext rc = CompileExpression("65534 + 1");
			object result = rc.Globals.testFunc();
			
			Assert.AreEqual("65535", result.ToString());
			Assert.AreEqual(Type.GetType("System.Int32"), result.GetType());
			
		} 
		
		[Test]		
		public void Test_17()
		{
			HappyRuntimeContext rc = CompileExpression(Int32.MaxValue + " + 1");
			object result = rc.Globals.testFunc();
			Assert.AreEqual(Int32.MinValue, result);
		} 
		
	}
}

