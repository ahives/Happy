load "mscorlib";

var Environment = System.Environment;
var DateTime = System.DateTime;
var Char = System.Char;

var lengthDataTypes;

function generateSprocs(database) 
{
	~<||
		|--***************************************************************
		|--This code was generated by a tool.
		|--Don't modify it by hand.
		|--Database:  |%database.Name%|
		|--Host:  |%Environment.MachineName%|
		|--Date:  |%DateTime.Now%|
		|--***************************************************************
	|>;

	var sprocName;
	foreach(table in database.Tables between "\n\n")
	{
		sprocName = table.Schema & ".gen_" & table.Name;
		~dropProcedureIfExists(sprocName);
		~<|
			|GO
			|CREATE PROCEDURE |%~sprocName;%|
			|( 
		|>

		~"\t";

		foreach(column in table.Columns between ~",\n\t")
			~parameterDef(column);

		~<|
			|)
			|AS
			|SELECT 1
			|GO
		|>

			parameters = <||% 
		foreach(column in table.Columns between ",\n\t")
			parameterDef(column); %||>;
	
	body = 
	<|SELECT 
		|% foreach(column in table.Columns between ",\n\t\t")
		~"[" column.Name "]"; %|
	FROM |%~"[" table.Schema "].[" table.Name "]";%||>;
	}
}
/*end GenerateSprocs*/

function dropProcedureIfExists(sprocName) 
{ 
~"IF OBJECT_ID('" sprocName "') IS NOT NULL DROP PROCEDURE " sprocName "\n";
}


function parameterName(column) 
{ 
	~"@[" column.Name "]";
}

function parameterDef(column)
{
	~parameterName(column) " ";

	if(lengthDataTypes == null)
	{
		lengthDataTypes = new(System.Collections.ArrayList);
		lengthDataTypes.Add("CHAR");
		lengthDataTypes.Add("NCHAR");
		lengthDataTypes.Add("VARCHAR");
		lengthDataTypes.Add("NVARCHAR");
		lengthDataTypes.Add("BINARY");
		lengthDataTypes.Add("VARBINARY");
	}

	var typeName = column.DataType.Name.ToUpper();

	~typeName;

	if(lengthDataTypes.Contains(typeName))
	{
		~"(";
		if(column.DataType.MaximumLength == -1)
			~"MAX";
		else
			~column.DataType.MaximumLength;
		~")"
	}
}